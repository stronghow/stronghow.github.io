<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博客</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-04-16T09:33:15.214Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Stronghow</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql常用操作</title>
    <link href="http://yoursite.com/2018/04/16/mysql%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2018/04/16/mysql常用操作/</id>
    <published>2018-04-16T08:52:06.000Z</published>
    <updated>2018-04-16T09:33:15.214Z</updated>
    
    <content type="html"><![CDATA[<h1 id="启动数据库"><a href="#启动数据库" class="headerlink" title="启动数据库"></a>启动数据库</h1><p>在管理员权限下cmd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net start mysql51</div></pre></td></tr></table></figure></p>
<h1 id="关闭数据库"><a href="#关闭数据库" class="headerlink" title="关闭数据库"></a>关闭数据库</h1><p>在管理员权限下cmd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">net stop mysql51</div></pre></td></tr></table></figure></p>
<h1 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -uroot -p</div></pre></td></tr></table></figure>
<h1 id="显示所有数据库"><a href="#显示所有数据库" class="headerlink" title="显示所有数据库"></a>显示所有数据库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show databases;</div></pre></td></tr></table></figure>
<h1 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">use dataname;</div></pre></td></tr></table></figure>
<h1 id="显示当前数据库下的表"><a href="#显示当前数据库下的表" class="headerlink" title="显示当前数据库下的表"></a>显示当前数据库下的表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">show tables</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;启动数据库&quot;&gt;&lt;a href=&quot;#启动数据库&quot; class=&quot;headerlink&quot; title=&quot;启动数据库&quot;&gt;&lt;/a&gt;启动数据库&lt;/h1&gt;&lt;p&gt;在管理员权限下cmd&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
      <category term="cmd" scheme="http://yoursite.com/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>myeclipse</title>
    <link href="http://yoursite.com/2018/03/26/myeclipse/"/>
    <id>http://yoursite.com/2018/03/26/myeclipse/</id>
    <published>2018-03-26T11:43:28.000Z</published>
    <updated>2018-03-26T11:51:37.597Z</updated>
    
    <content type="html"><![CDATA[<h2 id="myeclipse创建并运行web项目"><a href="#myeclipse创建并运行web项目" class="headerlink" title="myeclipse创建并运行web项目"></a><a href="https://jingyan.baidu.com/article/86fae346c117163c49121a8f.html" target="_blank" rel="external">myeclipse创建并运行web项目</a></h2><ol>
<li>展开WebRoot文件夹就可以看到有一个默认的index.jsp 选中启动</li>
<li>src/jdbc.properties 下 设置 jdbc.properties 中的 hibernate.show_sql=true 可以显示 hibernate生成的SQL语句</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;myeclipse创建并运行web项目&quot;&gt;&lt;a href=&quot;#myeclipse创建并运行web项目&quot; class=&quot;headerlink&quot; title=&quot;myeclipse创建并运行web项目&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://jingyan.baid
    
    </summary>
    
    
      <category term="javaweb" scheme="http://yoursite.com/tags/javaweb/"/>
    
      <category term="myeclipse" scheme="http://yoursite.com/tags/myeclipse/"/>
    
  </entry>
  
  <entry>
    <title>VMware虚拟机</title>
    <link href="http://yoursite.com/2018/03/25/VMware%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>http://yoursite.com/2018/03/25/VMware虚拟机/</id>
    <published>2018-03-25T11:30:18.000Z</published>
    <updated>2018-03-25T11:33:07.080Z</updated>
    
    <content type="html"><![CDATA[<h2 id="VMware默认的虚拟机存放地点是我的文档→VMware-Machine里面，在里面找到vdmx文件双击打开"><a href="#VMware默认的虚拟机存放地点是我的文档→VMware-Machine里面，在里面找到vdmx文件双击打开" class="headerlink" title="VMware默认的虚拟机存放地点是我的文档→VMware Machine里面，在里面找到vdmx文件双击打开"></a>VMware默认的虚拟机存放地点是我的文档→VMware Machine里面，在里面找到vdmx文件双击打开</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;VMware默认的虚拟机存放地点是我的文档→VMware-Machine里面，在里面找到vdmx文件双击打开&quot;&gt;&lt;a href=&quot;#VMware默认的虚拟机存放地点是我的文档→VMware-Machine里面，在里面找到vdmx文件双击打开&quot; class=&quot;hea
    
    </summary>
    
      <category term="虚拟机" scheme="http://yoursite.com/categories/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
    
      <category term="虚拟机，VMware" scheme="http://yoursite.com/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA%EF%BC%8CVMware/"/>
    
  </entry>
  
  <entry>
    <title>如何学习</title>
    <link href="http://yoursite.com/2018/03/21/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2018/03/21/如何学习/</id>
    <published>2018-03-21T10:54:02.000Z</published>
    <updated>2018-03-21T10:54:02.518Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>java编程思想读后感</title>
    <link href="http://yoursite.com/2018/03/08/java%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3%E8%AF%BB%E5%90%8E%E6%84%9F/"/>
    <id>http://yoursite.com/2018/03/08/java编程思想读后感/</id>
    <published>2018-03-08T04:58:43.000Z</published>
    <updated>2018-03-18T12:02:08.551Z</updated>
    
    <content type="html"><![CDATA[<h2 id="对象导论"><a href="#对象导论" class="headerlink" title="对象导论"></a>对象导论</h2><ol>
<li><strong>类</strong>实际上就是一个数据类型，他描诉了具有相同特性（数据元素）和行为（功能）的对象集合</li>
<li><strong>对象</strong>具有状态、行为、标识</li>
<li>每个<strong>对象</strong>拥有内部数据和方法，在内存中都有唯一的地址</li>
<li>程序员通过定义类来适应问题</li>
<li><strong>接口</strong>定义了某一特定对象所能发出的请求</li>
<li>将对象看作是服务 提供者 ，可以提高对象的内聚性。内聚性是让对象可以很好的完成一项任务，而不是试图做更多的事情。</li>
<li>新的<strong>类</strong>可以由任意数量、 任意类型的其他对象以任意可以实现心的类中想要的功能的方式所组成。</li>
<li><strong>隐藏</strong>是为了不让调用者知道没必要知道的部分，方便创建者修改内部的实现方法，而不必担心影响到调用者</li>
<li><strong>继承</strong>可以方便我们复用以前的代码，提高效率</li>
<li><strong>多态</strong>就是把对象当作它的基类的对象对待。这使得人们可以编写出不依赖于特定类型的代码，不受添加新类型影响</li>
<li><strong>多态</strong>调用方法时，编译器确保被调用方法的存在，并对调用参数和返回值执行类型检查（无法提供此类型保证的语言被称为弱类型的），但是并不知道将被执行的确切代码</li>
<li>Java中<strong>动态绑定</strong>是默认行为，即函数的后期绑定</li>
<li><strong>单根继承结构</strong>是垃圾回收的实现变得容易得多，因为所有对象具有 其类型信息，C++多继承 是为了兼容C</li>
<li><strong>容器</strong>：从设计的观点来看，真正需要的只是 一个 可以被操作，从而解决问题的序列。然而事实并不是，原因有：第一，不同的容器提供了不同类型的接口和外部行为。第二，不同的容器对于不同的操作有不同的效率。比如ArrayList和LinkedList</li>
<li><strong>参数化类型</strong>就是 一个编译器可以自动定制作用于特定类型上的类，即泛型，为了减少向下转型和运行时检查多需要的 额外时间。</li>
<li>在<strong>栈</strong>中创建存储空间和释放储存空间通常各需要一条汇编指令即可。分别对应将栈顶向下移动和栈顶指针向上移动。 </li>
<li><strong>动态方式</strong>有这样一个一般性的逻辑假设：对象趋向于复杂，所以查找和释放存储空间的开销不会对对象的创建造成重大的 冲击</li>
<li>Java完全采用了<strong>动态内存分配方式</strong>（基本类型只是一种特列）。每当想要创建新对象时就要使用new关键字来创建此对象的动态实例</li>
<li><strong>多线程（并发）编程</strong>，提高响应速度，隐患：共享资源</li>
</ol>
<h2 id="一切都是对象"><a href="#一切都是对象" class="headerlink" title="一切都是对象"></a>一切都是对象</h2><p>1.用<strong>引用</strong>操作对象<br>2.所 有 这 一 切 在 Java 里 都 得 到 了 简 化 。 一 切 都 被 视 为 对 象 ， 因 此 可 采 用 单 一 固 定 的 语 法 。 尽<br>管 一 切 都 看 作 对 象 ， 但 操 纵 的 标 识 符 实 际 上 是 对 象 的 一 个 <strong>“ 引 用 ” (reference)</strong>  。 可 以 将 这 一<br>情 形 想 像 成 用 遥 控 器 （ 引 用 ） 来 操 纵 电 视 机 〈 对 象 )。只 要 握 住 这 个 遥 控 器 ， 就 能 保 持 与 电 视 机<br>的 连 接 。 当 有 人 想 改 变 频 道 或 者 减 小 音 量 时 ， 实 际 操 控 的 是 遥 控 器 〈 引 用 ), 再 由 遥 控 器 来 调 控<br>电 视 机 （ 对 象 ） 。 如 果 想 在 房 间 里 四 处 走 走 ， 同 时 仍 能 调 控 电 视 机 ， 那 么 只 需 携 带 遥 控 器 （ 引 用 ）<br>而 不 是 电 视 机 （ 对 象 ),<br>此 外 ， 即 使 没 有 电 视 机 ， 遥 控 器 亦 可 独 立 存 在 。 也 就 是 说 ， 你 拥 有 一 个 引 用 ， 并 不 一 定 需<br>要 有 一 个 对 象 与 它 关 联 。 因 此 ， 如 果 想 操 纵 一 个 词 或 句 子 ， 则 可 以 创 建 一 个 String 引 用 ：</p>
<ol>
<li><strong>寄存器</strong>位于CPU内部，是最快的存储区</li>
<li><strong>堆栈</strong>位于通用RAM（ 随机访问存储器 ）中。 创建程序时，Java系统必须知道存储在堆栈内所有项的确切生命周期，对象的引用存储在其中</li>
<li><strong>堆</strong>一种通用的内存池（也位于RAM区），用于存放所有的Java对象。编译器不需要知道存储的数据在堆里存活多长时间</li>
<li><strong>常量存储</strong>通常直接放程序代码内部，或将其放在ROM（只读存储器）中</li>
<li><strong>非RAM储存</strong> <em>流对象</em>和<em>持久化对象</em>。在流对象<br>中，对象通常转化成字节流，通常被发送给另一台机器。在”持久化对象“中，对象被放在磁盘上。</li>
<li><strong>数组</strong> Java确保数组会被初始化，而且不能在它的范围之外被访问。这种范围检查，是以每个数组上少量的内存开销以及运行时的下表检查为代价的。当创建一个数组对象时，实际上就是创建了一个引用数组，并且自动初始化为null。创建基本数据类型的数组时，初始化内存，全部置0</li>
<li><strong>作用域</strong>由花括号的位置决定。当用new创建一个Java对象时，它可以存活于作用域之外。<br>10.若类的某个成员是基本数据类型，即使没有进行初始化，Java也会确保它获得一个默认值，但是不适用于局部变量<br>11.方法名和参数列表（合起来被称为<strong>”方法签名“</strong>）唯一标识方法</li>
<li>Java中的<strong>方法</strong>只能作为类的一部分来创建</li>
<li>javadoc 用来生成java文档</li>
</ol>
<h2 id="操作数"><a href="#操作数" class="headerlink" title="操作数"></a>操作数</h2><ol>
<li>将float或者double转型为整型值时，总是对该数字执行<strong>截尾</strong>，如果想要得到舍入的结果，就需要使用java.lang.Math中的round() 方法</li>
</ol>
<h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><ol>
<li><strong>循环语句</strong>可以带标签，break和continue可以与标签组合使用</li>
<li><strong>foreach</strong> 增强型for语句</li>
</ol>
<h2 id="初始化和清理"><a href="#初始化和清理" class="headerlink" title="初始化和清理"></a>初始化和清理</h2><ol>
<li><strong>构造函数</strong>没有返回值</li>
<li>不以返回区分<strong>重载</strong>方法是因为：有时你并不关心方法的返回值，你想要的是方法调用的其他效果（这常被称为”为了副作用而调用“），这是你可能会调用方法而忽略其返回值。所以，如果像这样调用方法：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">f()</div></pre></td></tr></table></figure>
</li>
</ol>
<p>此时Java如何才能判断该调用哪一个f()呢？</p>
<ol>
<li><strong>this关键字</strong>如 果 有 同 一 类 型 的 两 个 对 象 ， 分 别 是 a 和 b 。 你 可 能 想 知 道 ， 如 何 才 能 让 这 两 个 对 象 都 能 调<br>用 peel() 方 法 呢 ：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/ / ： initiaLization/BananaPeel.java</div><div class="line">class Banana &#123; void peel(int i) &#123; /* ... */ &#125; &#125;</div><div class="line">public c1ass BananaPeel &#123;</div><div class="line">public static void main(String[] args) &#123;</div><div class="line">	Banana a = new Banana(),</div><div class="line">		   b = new Banana();</div><div class="line">    a.peel(1);</div><div class="line">    b.peel(2);</div><div class="line">	&#125;</div><div class="line">&#125; ///:~</div></pre></td></tr></table></figure>
</li>
</ol>
<p>如 果 只 有 一 个 peel()方 法 ， 它 如 何 知 道 是 被 a 还 是 被 b 所 调 用 的 呢 ？<br>为 了 能 用 简 便 、 面 向 对 象 的 语 法 来 编 写 代 码 一 一 一 即 “ 发 送 消 息 给 对 象” , 编 译 器 做 了 一 些 幕<br>后 工 作 。 它 暗 自 把 “ 所 操 作 对 象 的 引 用 ” 作 为 第 一 个 参 数 传 递 给 peel() 。 所 以 上 述 两 个 方 法 的 调<br>用 就 变 成 了 这 样 ：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Banana.peel(a, l);</div><div class="line">Banana.peel(b. 2);</div></pre></td></tr></table></figure></p>
<p>这 是 内 部 的 表 示 形 式 。 我 们 并 不 能 这 样 书 写 代 码 ， 并 试 图 通 过 编 译 ； 但 这 种 写 法 的 确 能 帮<br>你 了 解 实 际 所 发 生 的 事 情 。<br>它还能调用构造器<br>4.Java里的对象并非总是被垃圾回收，或者回句话说：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.对象可能不被垃圾回收</div><div class="line">2.垃圾回收并不等于“析构”</div><div class="line">3.垃圾回收只与内存有关</div></pre></td></tr></table></figure></p>
<ol>
<li><strong>垃 圾 回 收 器</strong> 工 作 时 ， 将 一 面 回 收 空 间 ， 一 面 使 堆 中 的 对 象 紧 凑 排 列 ，<br>这 样 “ 堆 指 针 ” 就 可 以 很 容 易 移 动 到 更 近 传 送 带 的 开 始 处 ， 也 就 尽 量 避 免 了 页 面 错 误 。 通 过<br>垃 圾 回 收 器 对 对 象 重 新 排 列 ， 实 现 了 一 种 高 速 的 、 有 无 限 空 间 可 供 分 配 的 堆 模 型 。<pre><code>在 一 些 更 快 的 模 式 中 ， 垃 圾 回 收 器 并 非 基 于 引 用 记 数 技 术 。 它 们 依 据 的 思 想 是 ： 对 任 何
</code></pre>“ 活 ” 的 对 象 ， 一 定 能 最 终 追 溯 到 其 存 活 在 堆 栈 或 静 态 存 储 区 之 中 的 引 用 。 这 个 引 用 链 条 可 能 会<br>穿 过 数 个 对 象 层 次 。 由 此 ， 如 果 从 堆 栈 和 静 态 存 储 区 开 始 ， 遍 历 所 有 的 引 用 ， 就 能 找 到 所 有<br>“ 活 ” 的 对 象 。 对 于 发 现 的 每 个 引 用 ， 必 须 追 踪 它 所 引 用 的 对 象 ， 然 后 是 此 对 象 包 含 的 所 有 引 用 ，<br>如 此 反 复 进 行 ， 直 到 “ 根 源 于 堆 栈 和 静 态 存 储 区 的 引 用 “ 所 形 成 的 网 络 仝 部 被 访 问 为 止 。 你 所<br>访 问 过 的 对 象 须 都 是 “ 活 ” 的 。 注 意 ， 这 就 解 决 了 “ 交 互 自 引 用 的 对 象 组 ” 的 问 题 一 一 这 种<br>现 象 根 本 不 会 被 发 现 ， 因 此 也 就 被 自 动 回 收 了 。<br>在 这 种 方 式 下 ， Java 虚 拟 机 将 采 用 一 种 自 适 应 的 垃 圾 回 收 技 术 。 至 于 如 何 处 理 找 到 的 存 活<br>对 象 ， 取 决 于 不 同 的 Java 虚 拟 机 实 现 。 有 一 种 做 法 名 为 停 止 一 复 制 (stop-and-copy)o 显 然 这 意 味<br>着 ， 先 暂 停 程 序 的 运 行 （ 所 以 它 不 属 于 后 台 回 收 模 式 ） ， 然 后 将 所 有 存 活 的 对 象 从 当 前 堆 复 制 到<br>另 一 个 堆 ， 没 有 被 复 制 的 全 部 都 是 垃 圾 。 当 对 象 被 复 制 到 新 堆 时 ， 它 们 是 一 个 挨 着 一 个 的 ， 所<br>以 新 堆 保 持 紧 凑 排 列 ， 然 后 就 可 以 按 前 述 方 法 简 单 、 直 接 地 分 配 新 空 间 了 。<br>当 把 对 象 从 一 处 搬 到 另 一 处 时 ， 所 有 指 向 它 的 那 些 引 用 都 老 须 修 正 。 位 于 堆 或 静 态 存 储 区<br>的 引 用 可 以 直 接 被 修 正 ， 但 可 能 还 有 其 他 指 向 这 些 对 象 的 引 用 ， 它 们 在 遍 历 的 过 程 中 才 能 被 找<br>到 （ 可 以 想 像 成 有 个 表 格 ， 将 旧 地 址 映 射 至 新 地 址 ） 。<br>对 于 这 种 所 谓 的 “ 复 制 式 回 收 器 “ 而 言 ， 效 率 会 降 低 ， 这 有 两 个 原 因 。 首 先 ， 得 有 两 个 堆 ，<br>然 后 得 在 这 两 个 分 离 的 堆 之 间 来 回 捣 腾 ， 从 而 得 维 护 比 实 际 需 要 多 一 倍 的 空 间 。 某 些 Ja 、 ‘ a 虚 拟<br>机 对 此 问 题 的 处 理 方 式 是 ， 按 需 从 堆 中 分 配 几 块 较 大 的 内 存 ， 复 制 动 作 发 生 在 这 些 大 块 内 存<br>之 间 。<pre><code>第 二 个 问 题 在 于 复 制 。 程 序 进 人 稔 定 状 态 之 后 ， 可 能 只 会 产 生 少 量 垃 圾 ， 甚 至 没 有 垃 圾 。尽 管 如 此 ， 复 制 式 回 收 器 仍 然 会 将 所 有 内 存 自 一 处 复 制 到 另 一 处 ， 这 很 浪 费 。 为 了 避 免 这 种 情
</code></pre>形 ， 一 些 Java 虚 拟 机 会 进 行 检 查 ： 要 是 没 有 新 垃 圾 产 生 ， 就 会 转 换 到 另 一 种 工 作 模 式 〈 即 “ 自<br>适 应 ” )。这 种 模 式 称 为 标 记 一 清 扫 （ mark-and-sweep), sun 公 司 早 期 版 本 的 Java 虚 拟 机 使 用 了 这<br>种 技 术 。 对 一 般 用 途 而 言 ， “ 标 记 一 清 扫 ” 方 式 速 度 相 当 慢 ， 但 是 当 你 知 道 只 会 产 生 少 量 垃 圾 甚<br>至 不 会 产 生 垃 圾 时 ， 它 的 速 度 就 很 快 了 。<br>“ 标 记 一 清 扫 “ 所 依 据 的 思 路 同 样 是 从 堆 栈 和 静 态 存 储 区 出 发 ， 遍 历 所 有 的 引 用 ， 进 而 找 出<br>所 有 存 活 的 对 象 。 当 它 找 到 一 个 存 活 对 象 ， 就 会 给 对 象 设 一 个 标 记 ， 这 个 过 程 中 不 会 回 收 任<br>何 对 象 。 只 有 仝 部 标 记 工 作 完 成 的 时 候 ， 清 理 动 作 才 会 开 始 。 在 清 理 过 程 中 ， 没 有 标 记 的 对 象<br>将 被 释 放 ， 不 会 发 生 任 何 复 制 动 作 。 所 以 剩 下 的 堆 空 间 是 不 连 续 的 ， 垃 圾 回 收 器 要 是 希 望 得 到<br>连 续 空 间 的 话 ， 就 得 重 新 整 理 剩 下 的 对 象 。<br>“ 停 止 一 复 制 ” 的 意 思 是 这 种 垃 圾 回 收 动 作 不 是 在 后 台 进 行 的 ； 相 反 ， 垃 圾 回 收 动 作 发 生 的<br>同 时 ， 程 序 将 会 被 暂 停 。 在 sun 公 司 的 文 档 中 会 发 现 ， 许 多 参 考 文 献 将 垃 圾 回 收 视 为 低 优 先 级<br>的 后 台 进 程 ， 但 事 实 上 垃 圾 回 收 器 在 Sun 公 司 早 期 版 本 的 Java 虚 拟 机 中 并 非 以 这 种 方 式 实 现 的 。<br>当 可 用 内 存 数 量 较 低 时 ， Sun 版 本 的 垃 圾 回 收 器 会 暫 停 运 行 程 序 ， 同 样 ， “ 标 记 一 清 扫 ” 工 作 也<br>老 须 在 程 序 暂 停 的 情 况 下 才 能 进 行 。<br>如 前 文 所 述 ， 在 这 里 所 讨 论 的 Java 虚 拟 机 中 ， 内 存 分 配 以 较 大 的 “ 块 “ 为 单 位 。 如 果 对 象<br>较 大 ， 它 会 占 用 单 独 的 块 。 严 格 来 说 ， “ 停 止 一 复 制 ” 要 求 在 释 放 旧 有 对 象 之 前 ， 必 须 先 把 所 有<br>存 活 对 象 从 旧 堆 复 制 到 新 堆 ， 这 将 导 致 大 量 内 存 复 制 行 为 。 有 了 块 之 后 ， 垃 圾 回 收 器 在 回 收 的<br>时 候 就 可 以 往 废 弃 的 块 里 拷 贝 对 象 了 。 每 个 块 都 用 相 应 的 代 数 (generauon count) 来 记 录 它 是 否<br>还 存 活 。 通 常 ， 如 果 块 在 某 处 被 引 用 ， 其 代 数 会 增 加 《 垃 圾 回 收 器 将 对 上 次 回 收 动 作 之 后 新 分<br>配 的 块 进 行 整 理 。 这 对 处 理 大 量 短 命 的 临 时 对 象 很 有 帮 助 。 垃 圾 回 收 器 会 定 期 进 行 完 整 的 清 理<br>动 作 一 一 一 大 型 对 象 仍 然 不 会 被 复 制 （ 只 是 其 代 数 会 增 加 ） ， 内 含 小 型 对 象 的 那 些 块 则 被 复 制 并 整<br>理 。 Java 虚 拟 机 会 进 行 监 视 ， 如 果 所 有 对 象 都 很 稳 定 ， 垃 圾 回 收 器 的 效 率 降 低 的 话 ， 就 切 换 到<br>“ 标 记 一 清 扫 ” 方 式 ； 同 样 ， Java 虚 拟 机 会 跟 踪 “ 标 记 一 清 扫 ” 的 效 果 ， 要 是 堆 空 间 出 现 很 多 碎 片 ，<br>就 会 切 换 回 “ 停 止 一 复 制 “ 方 式 。 这 就 是 “ 自 适 应 ” 技 术 ， 你 可 以 给 它 个 罗 嗦 的 称 呼 ： “ 自 适 应<br>的 、 分 代 的 、 停 止 一 复 制 、 标 记 一 清 扫 ” 式 垃 圾 回 收 器 。<pre><code>Java 虚 拟 机 中 有 许 多 附 加 技 术 用 以 提 升 速 度 。 尤 其 是 与 加 载 器 操 作 有 关 的 ， 被 称 为 “ 即 时 ”
</code></pre>(Just-In-Time ， JIT ） 编 译 器 的 技 术 。 这 种 技 术 可 以 把 程 序 全 部 或 部 分 翻 译 成 本 地 机 器 码 （ 这<br>本 来 是 Java 虚 拟 机 的 工 作 ), 程 序 运 行 速 度 因 此 得 以 提 升 。 当 需 要 装 载 某 个 类 （ 通 常 是 在 为 该<br>类 创 建 第 一 个 对 象 ） 时 ， 编 译 器 会 先 找 到 其 .class 文 件 ， 然 后 将 该 类 的 字 节 码 装 人 内 存 。 此 时 ，<br>有 两 种 方 案 可 供 选 择 。 一 种 是 就 让 即 时 编 译 器 编 译 所 有 代 码 。 但 这 种 做 法 有 两 个 缺 陷 ： 这 种<br>加 载 动 作 散 落 在 整 个 程 序 生 命 周 期 内 ， 累 加 起 来 要 花 更 多 时 间 ； 并 且 会 增 加 可 执 行 代 码 的 长<br>度 （ 字 节 码 要 比 即 时 编 译 器 展 开 后 的 本 地 机 器 码 小 很 多 ） ， 这 将 导 致 页 面 调 度 ， 从 而 降 低 程 序<br>速 度 。 另 一 种 做 法 称 为 惰 性 评 估 (lazy evaluauon) ， 意 思 是 即 时 编 译 器 只 在 必 要 的 时 候 才 编 译<br>代 码 。 这 样 ， 从 不 会 被 执 行 的 代 码 也 许 就 压 根 不 会 被 JIT 所 编 译 。 新 版 JDK 中 的 Java HotSpot 技<br>术 就 采 用 了 类 似 方 法 ， 代 码 每 次 被 执 行 的 时 候 都 会 做 一 些 优 化 ， 所 以 执 行 的 次 数 越 多 ， 它 的<br>速 度 就 越 快 。</li>
<li><strong>成员初始化</strong> 成员的自动初始化在构造器被调用之前发生 <strong>初始化顺序</strong> 在类内部，变量的定义的先后顺序决定了初始化的顺序。即使变量定义散布于方法定义之间，它们仍旧会在任何方法（包括构造器）被调用之前得到初始化。<pre><code>总 结 一 下**对 象 的 创 建 过 程** ， 假 设 有 个 名 为 Dog 的 类 ：
1. 即 使 没 有 显 式 地 使 用 static 关 键 字 ， 构 造 器 实 际 上 也 是 静 态 方 法 。 因 此 ， 当 首 次 创 建 类 型
</code></pre>为 Dog 的 对 象 时 （ 构 造 器 可 以 看 成 静 态 方 法 ） ， 或 者 Dog 类 的 静 态 方 法 / 静 态 域 首 次 被 访 问 时 ，<br>Java 解 释 器 必 须 查 找 类 路 径 ， 以 定 位 Dog.class文 件 。<pre><code>2 ． 然 后 载 人 Dog.class（ 后 面 会 学 到 ， 这 将 创 建 一 个 CIass 对 象 ） ， 有 关 静 态 初 始 化 的 所 有 动 作 都 会 执 行 。 因 此 ， 静 态 初 始 化 只 在 Class 对 象 首 次 加 载 的 时 候 进 行 一 次 。
3 ． 当 用 new Dog0 创 建 对 象 的 时 候 ， 首 先 将 在 堆 上 为 Dog 对 象 分 配 足 够 的 存 储 空 间 。
4 ． 这 块 存 储 空 间 会 被 清 零 ， 这 就 自 动 地 将 Dog 对 象 中 的 所 有 基 本 类 型 数 据 都 设 置 成 了 默 认 值
</code></pre>（ 对 数 字 来 说 就 是 0 ， 对 布 尔 型 和 字 符 型 也 相 同 ） ， 而 引 用 则 被 设 置 成 了 null 。<pre><code>5 ． 执 行 所 有 出 现 于 字 段 定 义 处 的 初 始 化 动 作 。
6 ． 执 行 构 造 器 。 正 如 将 在 第 7 章 所 看 到 的 ， 这 可 能 会 牵 涉 到 很 多 动 作 ， 尤 其 是 涉 及 继 承 的
</code></pre>时 候 。</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;对象导论&quot;&gt;&lt;a href=&quot;#对象导论&quot; class=&quot;headerlink&quot; title=&quot;对象导论&quot;&gt;&lt;/a&gt;对象导论&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;类&lt;/strong&gt;实际上就是一个数据类型，他描诉了具有相同特性（数据元素）和行为（功能）的对象
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="编程思想" scheme="http://yoursite.com/tags/%E7%BC%96%E7%A8%8B%E6%80%9D%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>简历</title>
    <link href="http://yoursite.com/2018/03/06/%E7%AE%80%E5%8E%86/"/>
    <id>http://yoursite.com/2018/03/06/简历/</id>
    <published>2018-03-06T08:58:38.000Z</published>
    <updated>2018-03-11T08:41:55.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简历网址"><a href="#简历网址" class="headerlink" title="简历网址"></a><a href="http://www.500d.me/" target="_blank" rel="external">简历网址</a></h2><h2 id="简历信息"><a href="#简历信息" class="headerlink" title="简历信息"></a>简历信息</h2><h4 id="用户名-18100177484"><a href="#用户名-18100177484" class="headerlink" title="用户名 18100177484"></a>用户名 18100177484</h4><h4 id="密码-9a"><a href="#密码-9a" class="headerlink" title="密码 9a"></a>密码 9a</h4><h2 id="简历制作"><a href="#简历制作" class="headerlink" title="简历制作"></a>简历制作</h2><h4 id="怎么写简历中的自我评价？"><a href="#怎么写简历中的自我评价？" class="headerlink" title="怎么写简历中的自我评价？"></a><a href="https://www.zhihu.com/question/20632491" target="_blank" rel="external">怎么写简历中的自我评价？</a></h4>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简历网址&quot;&gt;&lt;a href=&quot;#简历网址&quot; class=&quot;headerlink&quot; title=&quot;简历网址&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.500d.me/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简历网址&lt;/a&gt;&lt;/h2&gt;
    
    </summary>
    
      <category term="简历" scheme="http://yoursite.com/categories/%E7%AE%80%E5%8E%86/"/>
    
    
      <category term="简历" scheme="http://yoursite.com/tags/%E7%AE%80%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>Linux添加模块遇到的坑</title>
    <link href="http://yoursite.com/2017/11/02/Linux%E6%B7%BB%E5%8A%A0%E6%A8%A1%E5%9D%97%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://yoursite.com/2017/11/02/Linux添加模块遇到的坑/</id>
    <published>2017-11-02T14:15:35.000Z</published>
    <updated>2017-11-02T14:35:23.286Z</updated>
    
    <content type="html"><![CDATA[<h2 id="传递参数问题"><a href="#传递参数问题" class="headerlink" title="传递参数问题"></a>传递参数问题</h2><p>虽然 pid_t 是 int ,但是写成这样会 make 不通过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">static pid_t pid;</div><div class="line">//参数申明s</div><div class="line">module_param(pid,pid_t,0644); //参数说明</div></pre></td></tr></table></figure></p>
<p>正确写法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">static pid_t pid;</div><div class="line">//参数申明s</div><div class="line">module_param(pid,int,0644); //参数说明</div></pre></td></tr></table></figure></p>
<h2 id="find-task-by-vpid-undefined-问题"><a href="#find-task-by-vpid-undefined-问题" class="headerlink" title="find_task_by_vpid undefined 问题"></a>find_task_by_vpid undefined 问题</h2><p>编译的时候出现下面的警告：<br>WARNING: “find_task_by_vpid” [/home/work/try/va2pa/va2pa.ko] undefined!</p>
<p>find_task_by_vpid没有被export(Kernel 里面还有定义该函数，但是没有导出symbol，所以 driver 里面不能再使用)。具体信息可以<a href="http://blog.chinaunix.net/uid-20644632-id-68049.html" target="_blank" rel="external">参考</a>：</p>
<p>解决：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pid_task(find_vpid(pid), PIDTYPE_PID)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;传递参数问题&quot;&gt;&lt;a href=&quot;#传递参数问题&quot; class=&quot;headerlink&quot; title=&quot;传递参数问题&quot;&gt;&lt;/a&gt;传递参数问题&lt;/h2&gt;&lt;p&gt;虽然 pid_t 是 int ,但是写成这样会 make 不通过&lt;br&gt;&lt;figure class=&quot;hig
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="module" scheme="http://yoursite.com/tags/module/"/>
    
  </entry>
  
  <entry>
    <title>linux_4.x添加系统调用</title>
    <link href="http://yoursite.com/2017/11/01/linux-4-x%E6%B7%BB%E5%8A%A0%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/"/>
    <id>http://yoursite.com/2017/11/01/linux-4-x添加系统调用/</id>
    <published>2017-11-01T11:15:00.000Z</published>
    <updated>2017-11-10T06:58:57.500Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提-Linux不同版本内核源码中的函数定义与引用查找网站"><a href="#前提-Linux不同版本内核源码中的函数定义与引用查找网站" class="headerlink" title="前提 Linux不同版本内核源码中的函数定义与引用查找网站"></a>前提 Linux不同版本内核源码中的函数定义与引用查找<a href="http://elixir.free-electrons.com/linux/v4.13.8/source" target="_blank" rel="external">网站</a></h2><h3 id="4-x内核添加系统调用"><a href="#4-x内核添加系统调用" class="headerlink" title="4.x内核添加系统调用"></a>4.x内核添加系统调用</h3><h4 id="到官方网站下载源码我下的是4-13-8"><a href="#到官方网站下载源码我下的是4-13-8" class="headerlink" title="到官方网站下载源码我下的是4.13.8"></a>到<a href="https://www.kernel.org/" target="_blank" rel="external">官方网站</a>下载源码我下的是4.13.8</h4><h4 id="解压压缩包"><a href="#解压压缩包" class="headerlink" title="解压压缩包"></a>解压压缩包</h4><h5 id="我们先切换到root用户-把下载好的内核压缩文件放到-usr-src下，然后进入这个目录"><a href="#我们先切换到root用户-把下载好的内核压缩文件放到-usr-src下，然后进入这个目录" class="headerlink" title="我们先切换到root用户,把下载好的内核压缩文件放到/usr/src下，然后进入这个目录"></a>我们先切换到root用户,把下载好的内核压缩文件放到/usr/src下，然后进入这个目录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xz -d linux-4.13.8.tar.xz</div><div class="line">tar -xvf linux-4.13.8.tar</div></pre></td></tr></table></figure>
<h4 id="清除编译历史"><a href="#清除编译历史" class="headerlink" title="清除编译历史"></a>清除编译历史</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make mrproper</div></pre></td></tr></table></figure>
<h5 id="执行这条命令需要先安装一个包"><a href="#执行这条命令需要先安装一个包" class="headerlink" title="执行这条命令需要先安装一个包"></a>执行这条命令需要先安装一个包</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt install libncurses5-dev</div></pre></td></tr></table></figure>
<h4 id="配置内核选项"><a href="#配置内核选项" class="headerlink" title="配置内核选项"></a>配置内核选项</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure>
<h5 id="一般保持默认即可"><a href="#一般保持默认即可" class="headerlink" title="一般保持默认即可"></a>一般保持默认即可</h5><h4 id="编译内核"><a href="#编译内核" class="headerlink" title="编译内核"></a>编译内核</h4><h5 id="内-核-配-置-完-成-后-编-译-内-核-并-生-成-启-动-映-像-文-件-bzImage-位于-arch-x86-64-boot-bzImage"><a href="#内-核-配-置-完-成-后-编-译-内-核-并-生-成-启-动-映-像-文-件-bzImage-位于-arch-x86-64-boot-bzImage" class="headerlink" title="内 核 配 置 完 成 后 , 编 译 内 核 , 并 生 成 启 动 映 像 文 件 bzImage ( 位于./arch/x86_64/boot/bzImage)"></a>内 核 配 置 完 成 后 , 编 译 内 核 , 并 生 成 启 动 映 像 文 件 bzImage ( 位于./arch/x86_64/boot/bzImage)</h5><p>:<br>执行命令:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make</div></pre></td></tr></table></figure></p>
<p>如果是多核 cpu 可使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make -j4</div></pre></td></tr></table></figure></p>
<p>来加快编译速度。4代表4个进程,编译过程可能出现如图错误：<br><img src="http://otowics47.bkt.clouddn.com/11.png" alt="编译错误"><br>这是因为没有安装 openssl, openssl 的安装方法是:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt-get install libssl-dev</div></pre></td></tr></table></figure></p>
<p>openssl 安装完成后,再执行 make 命令即可,需要较长时间</p>
<h4 id="编译模块"><a href="#编译模块" class="headerlink" title="编译模块"></a>编译模块</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make modules</div></pre></td></tr></table></figure>
<p>第一次编译模块需要很长时间。</p>
<h4 id="安装内核"><a href="#安装内核" class="headerlink" title="安装内核"></a>安装内核</h4><p>(1)安装模块:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make modules_install</div></pre></td></tr></table></figure></p>
<p>(2)安装内核:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">#make install</div></pre></td></tr></table></figure></p>
<h4 id="配置-grub-引导程序"><a href="#配置-grub-引导程序" class="headerlink" title="配置 grub 引导程序"></a>配置 grub 引导程序</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">update-grub2</div></pre></td></tr></table></figure>
<h4 id="重启系统"><a href="#重启系统" class="headerlink" title="重启系统"></a>重启系统</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reboo</div></pre></td></tr></table></figure>
<h4 id="查看内核版本"><a href="#查看内核版本" class="headerlink" title="查看内核版本"></a>查看内核版本</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">uname -a</div></pre></td></tr></table></figure>
<p><img src="http://otowics47.bkt.clouddn.com/12.png" alt="如图"></p>
<h3 id="添加系统调用"><a href="#添加系统调用" class="headerlink" title="添加系统调用"></a>添加系统调用</h3><p>首先，给出几个关键的路径：<br>/usr/src/linux-4.13.8/arch/x86/include/asm/syscalls.h                自定义的系统调用函数声明<br>/usr/src/linux-4.13.8/kernel/sys.c                                                     自定义的系统调用函数实现<br>/usr/src/linux-4.13.8/arch/x86/entry/syscalls/syscall_64.tbl       系统调用表</p>
<h4 id="分配系统调用号-修改系统调用表"><a href="#分配系统调用号-修改系统调用表" class="headerlink" title="分配系统调用号,修改系统调用表"></a>分配系统调用号,修改系统调用表</h4><p>查看系统调用表(./arch/x86/entyr/syscalls/syscall_64.tbl)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">333 64 mysetnice sys_mysetnice</div></pre></td></tr></table></figure></p>
<p><img src="http://otowics47.bkt.clouddn.com/13.png" alt="如图"><br>每个系统调用在表中占一表项,其格式为:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;系统调用号&gt; &lt;commom/64/x32&gt; &lt;系统调用名&gt; &lt;服务例程入口地址&gt;</div></pre></td></tr></table></figure></p>
<h4 id="在syscalls-h文件内定义函数声明"><a href="#在syscalls-h文件内定义函数声明" class="headerlink" title="在syscalls.h文件内定义函数声明"></a>在syscalls.h文件内定义函数声明</h4><p><img src="http://otowics47.bkt.clouddn.com/14.png" alt="如图"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">asmlinkage int sys_mysetnice(pid_t pid, int flag, int nicevalue);</div></pre></td></tr></table></figure></p>
<p>返回值、参数和正常定义函数一样，函数名一定要以 sys_ 开头asmlinkage不要缺少。<br>函数定义前加宏asmlinkage ,表示这些函数通过堆栈而不是通过寄存器传递参数。</p>
<h4 id="在sys-c内实现上面声明的函数"><a href="#在sys-c内实现上面声明的函数" class="headerlink" title="在sys.c内实现上面声明的函数"></a>在sys.c内实现上面声明的函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">asmlinkage int sys_mysetnice(pid_t pid, int flag, int nicevalue)</div><div class="line">&#123;</div><div class="line">    struct pid * kpid;</div><div class="line">    struct task_struct * task;</div><div class="line">    int nicebef;</div><div class="line">    kpid = find_get_pid(pid);/* 返回pid */</div><div class="line">    task = pid_task(kpid, PIDTYPE_PID);/* 返回task_struct */</div><div class="line">    nicebef = task_nice(task);/* 返回进程当前nice值 */</div><div class="line">    if(flag == 1)</div><div class="line">    &#123;</div><div class="line">        set_user_nice(task, nicevalue);/* 修改进程nice值 */</div><div class="line">        printk(&quot;修改前nice值：%d\t修改后nice值：%d\n&quot;, nicebef, nicevalue);</div><div class="line">        return 0;</div><div class="line">    &#125;</div><div class="line">    else if(flag == 0)</div><div class="line">    &#123;</div><div class="line">        printk(&quot;该进程的nice值为%d\n&quot;, nicebef);</div><div class="line">        return 0;</div><div class="line">    &#125;</div><div class="line">    return EFAULT;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="重新编译内核"><a href="#重新编译内核" class="headerlink" title="重新编译内核"></a>重新编译内核</h4><h4 id="编写测试用例"><a href="#编写测试用例" class="headerlink" title="编写测试用例"></a>编写测试用例</h4><p>Linux nice值范围 -20~19<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#include &lt;unistd.h&gt;</div><div class="line">#include &lt;syscall.h&gt;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line">#include &lt;stdlib.h&gt;</div><div class="line"></div><div class="line">int main(int argc, char *argv[])</div><div class="line">&#123;</div><div class="line">     pid_t tid;</div><div class="line">     int nicevalue,resualt;</div><div class="line">     tid = getpid();</div><div class="line">     printf(&quot;pid = %d\n&quot;,tid);</div><div class="line">     resualt = syscall(333,tid,0,0);//read</div><div class="line">     printf(&quot;resualt = %ld\n&quot;,resualt);</div><div class="line">     resualt = syscall(333,tid,1,1);//set</div><div class="line">     printf(&quot;resualt = %ld\n&quot;,resualt);</div><div class="line">     resualt = syscall(333,tid,0,0);//read</div><div class="line">     printf(&quot;resualt = %ld\n&quot;,resualt);</div><div class="line">     return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>编译<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">gcc -o mysetnice.out mysetnice.c</div></pre></td></tr></table></figure></p>
<p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./mysetnice.out</div></pre></td></tr></table></figure></p>
<p>测试结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dmesg</div></pre></td></tr></table></figure></p>
<p><img src="http://otowics47.bkt.clouddn.com/15.png" alt="如图"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前提-Linux不同版本内核源码中的函数定义与引用查找网站&quot;&gt;&lt;a href=&quot;#前提-Linux不同版本内核源码中的函数定义与引用查找网站&quot; class=&quot;headerlink&quot; title=&quot;前提 Linux不同版本内核源码中的函数定义与引用查找网站&quot;&gt;&lt;/a
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="系统调用" scheme="http://yoursite.com/tags/%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>linux搭建hexo</title>
    <link href="http://yoursite.com/2017/11/01/linux%E6%90%AD%E5%BB%BAhexo/"/>
    <id>http://yoursite.com/2017/11/01/linux搭建hexo/</id>
    <published>2017-11-01T07:05:14.000Z</published>
    <updated>2017-11-01T07:56:58.322Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><ol>
<li>去<a href="https://nodejs.org/en/" target="_blank" rel="external">官方网站</a>下载已经编译好的包</li>
<li>解压压缩包，设置全局路径<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /media/stronghow/Stronghow/下载/ode-v8.9.0-linux-x64/bin/node  /usr/local/bin/node</div></pre></td></tr></table></figure>
</li>
</ol>
<p>其中 /media/stronghow/Stronghow/下载/ode-v8.9.0-linux-x64/bin/node 是解压包的路径<br>要在 /media/stronghow/Stronghow/下载/ode-v8.9.0-linux-x64/bin 下执行，减少不必要的麻烦</p>
<ol>
<li><p>同理，设置npm</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /media/stronghow/Stronghow/下载/ode-v8.9.0-linux-x64/bin/npm  /usr/local/bin/npm</div></pre></td></tr></table></figure>
</li>
<li><p>配置npm的镜像为国内淘宝镜像，不然有的包下载不了（比如 hexo, 好坑）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo npm install -g cnpm --registry=https://registry.npm.taobao.org</div></pre></td></tr></table></figure>
</li>
<li><p>设置cnpm为全局路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /media/stronghow/Stronghow/下载/ode-v8.9.0-linux-x64/bin/cnpm   /usr/local/bin/cnpm</div></pre></td></tr></table></figure>
</li>
<li><p>安装hexo</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo cnpm insatll hexo-cli -g</div></pre></td></tr></table></figure>
</li>
<li><p>设置hexo为全局路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ln -s /media/stronghow/Stronghow/下载/ode-v8.9.0-linux-x64/bin/hexo   /usr/local/bin/hexo</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装nodejs&quot;&gt;&lt;a href=&quot;#安装nodejs&quot; class=&quot;headerlink&quot; title=&quot;安装nodejs&quot;&gt;&lt;/a&gt;安装nodejs&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;去&lt;a href=&quot;https://nodejs.org/en/&quot; target
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>在windows下安装flex和bison</title>
    <link href="http://yoursite.com/2017/10/21/%E5%9C%A8windows%E4%B8%8B%E5%AE%89%E8%A3%85flex%E5%92%8Cbison/"/>
    <id>http://yoursite.com/2017/10/21/在windows下安装flex和bison/</id>
    <published>2017-10-21T13:29:29.000Z</published>
    <updated>2017-10-22T12:20:00.345Z</updated>
    
    <content type="html"><![CDATA[<h3 id="词法分析器"><a href="#词法分析器" class="headerlink" title="词法分析器"></a>词法分析器</h3><p>LEX是UNIX的工具，因此我们需要使用FLEX代替,使得在windows下使用；<br>配对：<br>LEX和YACC<br>FLEX和BISON<br>JFLEX和JavaCUP</p>
<h3 id="下载得网址"><a href="#下载得网址" class="headerlink" title="下载得网址:"></a>下载得网址:</h3><p><a href="http://gnuwin32.sourceforge.net/packages/flex.htm" target="_blank" rel="external">flex</a><br><a href="http://gnuwin32.sourceforge.net/packages/bison.htm" target="_blank" rel="external">bison</a><br> 最偷懒得方法就是直接下载 Complete package, except sources<br>打开右键我得电脑→属性→內容→高级→环境变量→系统变量→path→编辑<br>加入;C:\Program Files(x86)\GnuWin32\bin;<br>cmd<br>键入<br>flex -V<br>bison -V<br>这样就能看到正确得信息就表示安装成功了！！</p>
<h3 id="使用flex"><a href="#使用flex" class="headerlink" title="使用flex"></a>使用flex</h3><h4 id="步骤一："><a href="#步骤一：" class="headerlink" title="步骤一："></a>步骤一：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">%&#123;  </div><div class="line">	//声明一些变量或函数  </div><div class="line">%&#125;  </div><div class="line">//定义正则表达式  </div><div class="line">//比如:  </div><div class="line">//num ([0-9])+   //左边为符号，右边为正则表达式  </div><div class="line">%%  </div><div class="line">//定义一系列的动作，即如果匹配了上面定义的某个正则表达式之后的动作,此动作是C语言的语句  </div><div class="line">//比如：  </div><div class="line">//&#123;num&#125; &#123;printf(&quot;num&quot;);&#125; //左边为&#123;模式&#125;,右边为&#123;C语句&#125;;  </div><div class="line">%%  </div><div class="line">void main() //执行主函数  </div><div class="line">&#123;  </div><div class="line">    yylex(); </div><div class="line">	//开始解析语句,内置函数  </div><div class="line">    //定义C语言语句  </div><div class="line">&#125;  </div><div class="line">int yywrap()  </div><div class="line">&#123;  </div><div class="line">    return 1;  </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="示列（name-l）"><a href="#示列（name-l）" class="headerlink" title="示列（name.l）"></a>示列（name.l）</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div></pre></td><td class="code"><pre><div class="line">%&#123;</div><div class="line">#include &quot;stdio.h&quot;</div><div class="line">#include &quot;stdlib.h&quot;</div><div class="line">%&#125;</div><div class="line"></div><div class="line"></div><div class="line">/*标识符*/</div><div class="line">id [a-zA-Z_][a-zA-Z_0-9]*</div><div class="line"></div><div class="line">/*常量*/</div><div class="line">num ([1-9][0-9]*|[0])|([0][Xx]([1-9][0-9]*|[0]))|([0][0-7])|([0-9]*[.][0-9]+([eE][+-]?[0-9]*|[0])?f?)	</div><div class="line">ch	\&apos;([^&apos;])&#123;1&#125;\&apos;</div><div class="line">str	\&quot;(\\.|[^&quot;\\])*\&quot;</div><div class="line"></div><div class="line">/*关键字*/</div><div class="line">kw_int		int</div><div class="line">kw_float    float</div><div class="line">kw_double	double</div><div class="line">kw_char		char</div><div class="line">kw_void		void</div><div class="line">kw_if		if</div><div class="line">kw_then		then</div><div class="line">kw_else		else</div><div class="line">kw_switch	switch</div><div class="line">kw_case		case</div><div class="line">kw_default	default</div><div class="line">kw_while	while</div><div class="line">kw_do		do</div><div class="line">kw_for		for</div><div class="line">kw_break	break</div><div class="line">kw_continue	continue</div><div class="line">kw_return	return</div><div class="line"></div><div class="line">/*运算符*/</div><div class="line">add	[+]</div><div class="line">sub	[-]</div><div class="line">mul	[*]</div><div class="line">div	[/]</div><div class="line">mod	[%]</div><div class="line">inc	[+][+]</div><div class="line">dec	[-][-]</div><div class="line">not	[!]</div><div class="line">and	[&amp;][&amp;]</div><div class="line">or	[|][|]</div><div class="line">assign	[=]</div><div class="line">gt	[&gt;]</div><div class="line">ge	[&gt;][=]</div><div class="line">lt	[&lt;]</div><div class="line">le	[&lt;][=]</div><div class="line">equ	[=][=]</div><div class="line">nequ   [!][=]</div><div class="line"></div><div class="line">/*分解符*/</div><div class="line">comma	 [,]</div><div class="line">colon	 [:]</div><div class="line">simcon	 [;]</div><div class="line">lparen	 \(</div><div class="line">rparen	 \)</div><div class="line">lbracket \[</div><div class="line">rbracket \]</div><div class="line">lbrac	 \&#123;</div><div class="line">rbrac	 \&#125;</div><div class="line"></div><div class="line">%%</div><div class="line"></div><div class="line">&#123;kw_int&#125; |</div><div class="line">&#123;kw_float&#125; |</div><div class="line">&#123;kw_double&#125; |</div><div class="line">&#123;kw_char&#125; |</div><div class="line">&#123;kw_void&#125; |</div><div class="line">&#123;kw_if&#125; |</div><div class="line">&#123;kw_then&#125; |</div><div class="line">&#123;kw_else&#125; |</div><div class="line">&#123;kw_switch&#125; |</div><div class="line">&#123;kw_case&#125; |</div><div class="line">&#123;kw_default&#125; |</div><div class="line">&#123;kw_while&#125; |</div><div class="line">&#123;kw_do&#125; |</div><div class="line">&#123;kw_for&#125; |</div><div class="line">&#123;kw_break&#125; |</div><div class="line">&#123;kw_continue&#125; |</div><div class="line">&#123;kw_return&#125; &#123;</div><div class="line">	printf(&quot;&lt;kw_%s, %s&gt;\n&quot;, yytext, yytext);</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;ch&#125; &#123;</div><div class="line">   printf(&quot;&lt;ch, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;str&#125; &#123;</div><div class="line">   printf(&quot;&lt;str, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;id&#125; &#123;</div><div class="line">   printf(&quot;&lt;id, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line"></div><div class="line">&#123;num&#125; &#123;</div><div class="line">   printf(&quot;&lt;num, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&#123;add&#125; &#123;</div><div class="line">   printf(&quot;&lt;add, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;sub&#125; &#123;</div><div class="line">   printf(&quot;&lt;sub, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;mul&#125; &#123;</div><div class="line">   printf(&quot;&lt;mul, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;div&#125; &#123;</div><div class="line">   printf(&quot;&lt;div, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;mod&#125; &#123;</div><div class="line">   printf(&quot;&lt;mod, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;inc&#125; &#123;</div><div class="line">   printf(&quot;&lt;inc, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;dec&#125; &#123;</div><div class="line">   printf(&quot;&lt;dec, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;not&#125; &#123;</div><div class="line">   printf(&quot;&lt;not, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;and&#125; &#123;</div><div class="line">   printf(&quot;&lt;and, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;or&#125; &#123;</div><div class="line">   printf(&quot;&lt;or, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;assign&#125; &#123;</div><div class="line">   printf(&quot;&lt;assign, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;gt&#125; &#123;</div><div class="line">   printf(&quot;&lt;gt, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;ge&#125; &#123;</div><div class="line">   printf(&quot;&lt;ge, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;lt&#125; &#123;</div><div class="line">   printf(&quot;&lt;lt, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;le&#125; &#123;</div><div class="line">   printf(&quot;&lt;le, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;equ&#125; &#123;</div><div class="line">   printf(&quot;&lt;equ, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;nequ&#125; &#123;</div><div class="line">   printf(&quot;&lt;nequ, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#123;comma&#125; &#123;</div><div class="line">   printf(&quot;&lt;comma, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;colon&#125; &#123;</div><div class="line">   printf(&quot;&lt;colon, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;simcon&#125; &#123;</div><div class="line">   printf(&quot;&lt;simcon, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;lparen&#125; &#123;</div><div class="line">   printf(&quot;&lt;lparen, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;rparen&#125; &#123;</div><div class="line">   printf(&quot;&lt;rparen, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;lbracket&#125; &#123;</div><div class="line">   printf(&quot;&lt;lbracket, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;rbracket&#125; &#123;</div><div class="line">   printf(&quot;&lt;rbracket, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;lbrac&#125; &#123;</div><div class="line">   printf(&quot;&lt;lbrac, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line">&#123;rbrac&#125; &#123;</div><div class="line">   printf(&quot;&lt;rbrac, %s&gt;\n&quot;, yytext);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">%%</div><div class="line">int yywrap() &#123;</div><div class="line">  return 1;</div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(int argc, char** argv) &#123;</div><div class="line">   if (argc &gt; 1) &#123;</div><div class="line">       if (!(yyin = fopen(argv[1], &quot;r&quot;))) &#123;   </div><div class="line">           perror(argv[1]);</div><div class="line">           return 1;</div><div class="line">       &#125;</div><div class="line">   &#125;</div><div class="line">   while (yylex());</div><div class="line">   return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="文本-Text-txt"><a href="#文本-Text-txt" class="headerlink" title="文本(Text.txt)"></a>文本(Text.txt)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">int float &#123;&#125;()[] 0 </div><div class="line">0x0 0x123 </div><div class="line">123.5 </div><div class="line">.3e-10f </div><div class="line">= &gt;= || &amp;&amp; ! ; , </div><div class="line">this_is_an_id </div><div class="line">id123 </div><div class="line">if then else </div><div class="line">&apos;f&apos;</div><div class="line">&quot;bfgg&quot;</div></pre></td></tr></table></figure>
<h4 id="步骤二："><a href="#步骤二：" class="headerlink" title="步骤二："></a>步骤二：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">flex name.l</div><div class="line">gcc -o out.exe lex.yy.c</div><div class="line">out.exe  Text.txt</div></pre></td></tr></table></figure>
<h5 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">&lt;kw_int, int&gt;</div><div class="line"> &lt;kw_float, float&gt;</div><div class="line"> &lt;lbrac, &#123;&gt;</div><div class="line">&lt;rbrac, &#125;&gt;</div><div class="line">&lt;lparen, (&gt;</div><div class="line">&lt;rparen, )&gt;</div><div class="line">&lt;lbracket, [&gt;</div><div class="line">&lt;rbracket, ]&gt;</div><div class="line"> &lt;num, 0&gt;</div><div class="line"></div><div class="line">&lt;num, 0x0&gt;</div><div class="line"> &lt;num, 0x123&gt;</div><div class="line"></div><div class="line">&lt;num, 123.5&gt;</div><div class="line"></div><div class="line">&lt;num, .3e-10f&gt;</div><div class="line"></div><div class="line">&lt;assign, =&gt;</div><div class="line"> &lt;ge, &gt;=&gt;</div><div class="line"> &lt;or, ||&gt;</div><div class="line"> &lt;and, &amp;&amp;&gt;</div><div class="line"> &lt;not, !&gt;</div><div class="line"> &lt;simcon, ;&gt;</div><div class="line"> &lt;comma, ,&gt;</div><div class="line"></div><div class="line">&lt;id, this_is_an_id&gt;</div><div class="line"></div><div class="line">&lt;id, id123&gt;</div><div class="line"></div><div class="line">&lt;kw_if, if&gt;</div><div class="line"> &lt;kw_then, then&gt;</div><div class="line"> &lt;kw_else, else&gt;</div><div class="line"></div><div class="line">&lt;ch, &apos;f&apos;&gt;</div><div class="line"></div><div class="line">&lt;str, &quot;bfgg&quot;&gt;</div></pre></td></tr></table></figure>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>rule组合使用同一函数时必须放最前面，否则报错<br>即此段代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&#123;kw_int&#125; |</div><div class="line">&#123;kw_float&#125; |</div><div class="line">&#123;kw_double&#125; |</div><div class="line">&#123;kw_char&#125; |</div><div class="line">&#123;kw_void&#125; |</div><div class="line">&#123;kw_if&#125; |</div><div class="line">&#123;kw_then&#125; |</div><div class="line">&#123;kw_else&#125; |</div><div class="line">&#123;kw_switch&#125; |</div><div class="line">&#123;kw_case&#125; |</div><div class="line">&#123;kw_default&#125; |</div><div class="line">&#123;kw_while&#125; |</div><div class="line">&#123;kw_do&#125; |</div><div class="line">&#123;kw_for&#125; |</div><div class="line">&#123;kw_break&#125; |</div><div class="line">&#123;kw_continue&#125; |</div><div class="line">&#123;kw_return&#125; &#123;</div><div class="line">	printf(&quot;&lt;kw_%s, %s&gt;\n&quot;, yytext, yytext);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>要放在最前面</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;词法分析器&quot;&gt;&lt;a href=&quot;#词法分析器&quot; class=&quot;headerlink&quot; title=&quot;词法分析器&quot;&gt;&lt;/a&gt;词法分析器&lt;/h3&gt;&lt;p&gt;LEX是UNIX的工具，因此我们需要使用FLEX代替,使得在windows下使用；&lt;br&gt;配对：&lt;br&gt;LEX和YA
    
    </summary>
    
      <category term="编译原理" scheme="http://yoursite.com/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/"/>
    
    
      <category term="词法分析器" scheme="http://yoursite.com/tags/%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90%E5%99%A8/"/>
    
      <category term="flex" scheme="http://yoursite.com/tags/flex/"/>
    
      <category term="bison" scheme="http://yoursite.com/tags/bison/"/>
    
  </entry>
  
  <entry>
    <title>Android开发之AndroidAnnotations框架的使用</title>
    <link href="http://yoursite.com/2017/08/07/Android%E5%BC%80%E5%8F%91%E4%B9%8BAndroidAnnotations%E6%A1%86%E6%9E%B6%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2017/08/07/Android开发之AndroidAnnotations框架的使用/</id>
    <published>2017-08-07T03:18:57.000Z</published>
    <updated>2017-08-07T07:55:43.048Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Android开发之AndroidAnnotations框架的使用"><a href="#Android开发之AndroidAnnotations框架的使用" class="headerlink" title="Android开发之AndroidAnnotations框架的使用"></a><a href="http://blog.csdn.net/yubo_725/article/details/51206302" target="_blank" rel="external">Android开发之AndroidAnnotations框架的使用</a></h3><h3 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h3><ol>
<li>Warning:Android-apt plugin is incompatible with future version of android Gradle plugin. Please use ‘annotationProcessor’ configuration instead.<br><a href="http://blog.csdn.net/pjingying/article/details/71975805?utm_source=itdadao&amp;utm_medium=referral" target="_blank" rel="external">解决</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Android开发之AndroidAnnotations框架的使用&quot;&gt;&lt;a href=&quot;#Android开发之AndroidAnnotations框架的使用&quot; class=&quot;headerlink&quot; title=&quot;Android开发之AndroidAnnotatio
    
    </summary>
    
      <category term="Android开发" scheme="http://yoursite.com/categories/Android%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="框架" scheme="http://yoursite.com/tags/%E6%A1%86%E6%9E%B6/"/>
    
      <category term="AndroidAnnotations" scheme="http://yoursite.com/tags/AndroidAnnotations/"/>
    
  </entry>
  
  <entry>
    <title>AndroidSDK_Support自带夜间、日间模式切换详解</title>
    <link href="http://yoursite.com/2017/08/05/AndroidSDK-Support%E8%87%AA%E5%B8%A6%E5%A4%9C%E9%97%B4%E3%80%81%E6%97%A5%E9%97%B4%E6%A8%A1%E5%BC%8F%E5%88%87%E6%8D%A2%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/08/05/AndroidSDK-Support自带夜间、日间模式切换详解/</id>
    <published>2017-08-05T07:10:47.000Z</published>
    <updated>2017-08-05T07:10:47.800Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android_Studio主题配置</title>
    <link href="http://yoursite.com/2017/08/02/Android-Studio%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2017/08/02/Android-Studio主题配置/</id>
    <published>2017-08-02T13:35:58.000Z</published>
    <updated>2017-08-02T13:35:58.348Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android_Studio从Git上Clone项目</title>
    <link href="http://yoursite.com/2017/08/02/Android-Studio%E4%BB%8EGit%E4%B8%8AClone%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2017/08/02/Android-Studio从Git上Clone项目/</id>
    <published>2017-08-02T02:08:27.000Z</published>
    <updated>2017-08-02T02:23:37.674Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在Android-Studio中设置Git"><a href="#在Android-Studio中设置Git" class="headerlink" title="在Android Studio中设置Git"></a>在Android Studio中设置Git</h2><h4 id="打开-File-rarr-setting-得到如下图："><a href="#打开-File-rarr-setting-得到如下图：" class="headerlink" title="打开 File  &rarr;  setting, 得到如下图："></a>打开 <code>File</code>  &rarr;  <code>setting</code>, 得到如下图：</h4><p><img src="http://otowics47.bkt.clouddn.com/09.PNG" alt="点击```Test```后弹出git版本，说明配置成功，如果你的android Studio已经配置过，这步可以忽略"></p>
<h4 id="打开File-rarr-New-rarr-Project-from-Version-Control-rarr-Git-弹出界面如下图："><a href="#打开File-rarr-New-rarr-Project-from-Version-Control-rarr-Git-弹出界面如下图：" class="headerlink" title="打开File &rarr; New &rarr;  Project from Version Control &rarr; Git,弹出界面如下图："></a>打开<code>File</code> &rarr; <code>New</code> &rarr;  <code>Project from Version Control</code> &rarr; <code>Git</code>,弹出界面如下图：</h4><p><img src="http://otowics47.bkt.clouddn.com/10.png" alt="点击```Clone```，等待Clone完成，即可。
"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在Android-Studio中设置Git&quot;&gt;&lt;a href=&quot;#在Android-Studio中设置Git&quot; class=&quot;headerlink&quot; title=&quot;在Android Studio中设置Git&quot;&gt;&lt;/a&gt;在Android Studio中设置Git&lt;/
    
    </summary>
    
      <category term="Android_studio" scheme="http://yoursite.com/categories/Android-studio/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>mysql数据库的导入导出</title>
    <link href="http://yoursite.com/2017/07/30/mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/"/>
    <id>http://yoursite.com/2017/07/30/mysql数据库的导入导出/</id>
    <published>2017-07-30T13:33:33.000Z</published>
    <updated>2017-07-30T13:56:00.137Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导出数据库"><a href="#导出数据库" class="headerlink" title="导出数据库"></a>导出数据库</h1><h3 id="最常用导出数据库"><a href="#最常用导出数据库" class="headerlink" title="最常用导出数据库"></a>最常用导出数据库</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u用户名 -<span class="selector-tag">p</span> 数据库名&gt;保存路径\xx.sql</div></pre></td></tr></table></figure>
<h5 id="注意：此备份只备份数据和数据结构，没有备份存储过程和触发器"><a href="#注意：此备份只备份数据和数据结构，没有备份存储过程和触发器" class="headerlink" title="注意：此备份只备份数据和数据结构，没有备份存储过程和触发器"></a>注意：此备份只备份数据和数据结构，没有备份存储过程和触发器</h5><p><img src="http://otowics47.bkt.clouddn.com/07.PNG" alt="cmd操作"></p>
<h3 id="导出所有数据库"><a href="#导出所有数据库" class="headerlink" title="导出所有数据库"></a>导出所有数据库</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u用户名 -<span class="selector-tag">p</span> -a&gt;保存路径\xx.sql</div></pre></td></tr></table></figure>
<h3 id="只导出数据不导出数据结构"><a href="#只导出数据不导出数据结构" class="headerlink" title="只导出数据不导出数据结构"></a>只导出数据不导出数据结构</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u用户名 -<span class="selector-tag">p</span> -t数据库名&gt;保存路径\xx.sql</div></pre></td></tr></table></figure>
<h3 id="导出数据库中的触发器（Events）"><a href="#导出数据库中的触发器（Events）" class="headerlink" title="导出数据库中的触发器（Events）"></a>导出数据库中的触发器（Events）</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u用户名 -<span class="selector-tag">p</span> -e数据库名&gt;保存路径\xx.sql</div></pre></td></tr></table></figure>
<h3 id="导出数据库中的存储过程和函数"><a href="#导出数据库中的存储过程和函数" class="headerlink" title="导出数据库中的存储过程和函数"></a>导出数据库中的存储过程和函数</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysqldump -u用户名 -<span class="selector-tag">p</span> -r数据库名&gt;保存路径\xx.sql</div></pre></td></tr></table></figure>
<h1 id="导入数据库"><a href="#导入数据库" class="headerlink" title="导入数据库"></a>导入数据库</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u用户名 -<span class="selector-tag">p</span> 数据库名&lt;备份路径\xx.sql</div></pre></td></tr></table></figure>
<p><img src="http://otowics47.bkt.clouddn.com/08.PNG" alt="cmd操作"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;导出数据库&quot;&gt;&lt;a href=&quot;#导出数据库&quot; class=&quot;headerlink&quot; title=&quot;导出数据库&quot;&gt;&lt;/a&gt;导出数据库&lt;/h1&gt;&lt;h3 id=&quot;最常用导出数据库&quot;&gt;&lt;a href=&quot;#最常用导出数据库&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
      <category term="cmd" scheme="http://yoursite.com/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github搭建博客流程</title>
    <link href="http://yoursite.com/2017/07/26/hexo-github%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%B5%81%E7%A8%8B/"/>
    <id>http://yoursite.com/2017/07/26/hexo-github搭建博客流程/</id>
    <published>2017-07-26T13:19:58.000Z</published>
    <updated>2017-07-26T13:34:53.937Z</updated>
    
    <content type="html"><![CDATA[<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p><a href="http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="external">小茗同学的博客园</a></p>
<h2 id="NexT主题配置"><a href="#NexT主题配置" class="headerlink" title="NexT主题配置"></a>NexT主题配置</h2><p><a href="https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud" target="_blank" rel="external">为NexT主题添加文章阅读量统计功能</a></p>
<p><a href="http://www.jianshu.com/p/ba61be039c1f" target="_blank" rel="external">hexo之next主题优化整理</a></p>
<p><a href="http://www.jeyzhang.com/next-theme-personal-settings.html" target="_blank" rel="external">hexo next主题配置</a></p>
<p><a href="https://segmentfault.com/a/1190000009595779" target="_blank" rel="external">Hexo-next主题个性化配置</a>(细节多)</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;环境配置&quot;&gt;&lt;a href=&quot;#环境配置&quot; class=&quot;headerlink&quot; title=&quot;环境配置&quot;&gt;&lt;/a&gt;环境配置&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/liuxianan/p/build-blog-website
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="gihub" scheme="http://yoursite.com/tags/gihub/"/>
    
  </entry>
  
  <entry>
    <title>hexo部署到github遇到的坑</title>
    <link href="http://yoursite.com/2017/07/26/hexo%E9%83%A8%E7%BD%B2%E5%88%B0github%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>http://yoursite.com/2017/07/26/hexo部署到github遇到的坑/</id>
    <published>2017-07-26T09:15:01.000Z</published>
    <updated>2017-07-26T10:18:12.693Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-部署到github无法存储图片"><a href="#1-部署到github无法存储图片" class="headerlink" title="1. 部署到github无法存储图片"></a>1. 部署到github无法存储图片</h3><p><strong>解决</strong>： 注册<a href="https://portal.qiniu.com" target="_blank" rel="external">七牛云 </a>  &rarr; 新建存储空间<br>（对象存储） &rarr; <a href="https://github.com/qiniu/QSunSync" target="_blank" rel="external">上传图片工具</a>进行图片上传到七牛云 &rarr; 获取外链 <img src="http://otowics47.bkt.clouddn.com/06.PNG" alt="获取外链"></p>
<h3 id="2-markdown无法满足需求"><a href="#2-markdown无法满足需求" class="headerlink" title="2. markdown无法满足需求"></a>2. markdown无法满足需求</h3><p><strong>解决</strong>：直接写html<img src="http://otowics47.bkt.clouddn.com/05.PNG" alt="html"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-部署到github无法存储图片&quot;&gt;&lt;a href=&quot;#1-部署到github无法存储图片&quot; class=&quot;headerlink&quot; title=&quot;1. 部署到github无法存储图片&quot;&gt;&lt;/a&gt;1. 部署到github无法存储图片&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="github pages" scheme="http://yoursite.com/tags/github-pages/"/>
    
  </entry>
  
  <entry>
    <title>windows下用cmd命令netstat查看系统端口使用情况</title>
    <link href="http://yoursite.com/2017/07/26/windows%E4%B8%8B%E7%94%A8cmd%E5%91%BD%E4%BB%A4netstat%E6%9F%A5%E7%9C%8B%E7%B3%BB%E7%BB%9F%E7%AB%AF%E5%8F%A3%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5/"/>
    <id>http://yoursite.com/2017/07/26/windows下用cmd命令netstat查看系统端口使用情况/</id>
    <published>2017-07-26T07:19:33.000Z</published>
    <updated>2017-07-26T09:43:55.370Z</updated>
    
    <content type="html"><![CDATA[<h3 id="大家可以在cmd窗口执行"><a href="#大家可以在cmd窗口执行" class="headerlink" title="大家可以在cmd窗口执行"></a><table><tr><td bgcolor="PowderBlue">大家可以在cmd窗口执行</td></tr></table></h3><p><img src="http://otowics47.bkt.clouddn.com/01.PNG" alt="这里可以看到所有参数"></p>
<h3 id="查看一个端口被哪个进程占用，然后杀掉他"><a href="#查看一个端口被哪个进程占用，然后杀掉他" class="headerlink" title="查看一个端口被哪个进程占用，然后杀掉他"></a><table><tr><td bgcolor="PowderBlue">查看一个端口被哪个进程占用，然后杀掉他</td></tr></table></h3><p><img src="http://otowics47.bkt.clouddn.com/02.PNG" alt="杀死进程"></p>
<h3 id="查看任务管理器"><a href="#查看任务管理器" class="headerlink" title="查看任务管理器"></a><table><tr><td bgcolor="PowderBlue">查看任务管理器</td></tr></table></h3><p><img src="http://otowics47.bkt.clouddn.com/03.PNG" alt="任务管理器列表"></p>
<h3 id="用pid查找程序"><a href="#用pid查找程序" class="headerlink" title="用pid查找程序"></a><table><tr><td bgcolor="PowderBlue">用pid查找程序</td></tr></table></h3><p><img src="http://otowics47.bkt.clouddn.com/04.PNG" alt="查找程序"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;大家可以在cmd窗口执行&quot;&gt;&lt;a href=&quot;#大家可以在cmd窗口执行&quot; class=&quot;headerlink&quot; title=&quot;大家可以在cmd窗口执行&quot;&gt;&lt;/a&gt;&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=&quot;PowderBlue&quot;&gt;大家可以在cmd窗口执行&lt;/
    
    </summary>
    
      <category term="windows" scheme="http://yoursite.com/categories/windows/"/>
    
    
      <category term="cmd" scheme="http://yoursite.com/tags/cmd/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/07/24/hello-world/"/>
    <id>http://yoursite.com/2017/07/24/hello-world/</id>
    <published>2017-07-24T07:19:30.174Z</published>
    <updated>2017-07-24T07:19:30.174Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
